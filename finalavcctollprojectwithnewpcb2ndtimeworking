/*
#include <SoftwareSerial.h>

#define RS485_RX A0
#define RS485_TX A1
#define RS485_DE_RE 13

#define AXLE_SENSOR_PIN 2
#define HEIGHT_SENSOR_COUNT 10
#define VEHICLE_TIMEOUT 3000
#define AXLE_DEBOUNCE_MS 200

SoftwareSerial rs485(RS485_RX, RS485_TX);

unsigned long axleCount = 0;
bool lastAxleState = HIGH;
unsigned long lastAxleChangeTime = 0;

const int heightSensorPins[HEIGHT_SENSOR_COUNT] = {3,4,5,6,7,8,9,10,11,12};
const int heightValues[HEIGHT_SENSOR_COUNT]     = {1400,1520,1650,1780,1910,2030,2400,2600,2800,3000};

bool lastHeightState[HEIGHT_SENSOR_COUNT];
int maxHeight = 0;

unsigned long lastDetectionTime = 0;

void setup() {
  Serial.begin(115200);
  Serial.println("System Ready!");

  pinMode(AXLE_SENSOR_PIN, INPUT);
  for (int i = 0; i < HEIGHT_SENSOR_COUNT; i++) {
    pinMode(heightSensorPins[i], INPUT);
    lastHeightState[i] = HIGH;
  }
  
  rs485.begin(9600);
}

void transmitRS485(String data) {
  digitalWrite(RS485_DE_RE, HIGH);
  delay(1);
  rs485.println(data);
  rs485.flush();
  delay(1);
  digitalWrite(RS485_DE_RE, LOW);
}


void loop() {
  unsigned long currentMillis = millis();
   bool currentAxleState = digitalRead(AXLE_SENSOR_PIN);
  if (lastAxleState == HIGH && currentAxleState == LOW) {
    axleCount++;
    lastDetectionTime = millis();
    Serial.print("Axle detected. Count = ");
    Serial.println(axleCount);
    delay(30);
  }
  lastAxleState = currentAxleState;

  // ---------------- HEIGHT SENSORS ----------------
  for (int i = 0; i < HEIGHT_SENSOR_COUNT; i++) {
    bool currentState = digitalRead(heightSensorPins[i]);
    if (lastHeightState[i] == HIGH && currentState == LOW) {
      lastDetectionTime = currentMillis;
      if (heightValues[i] > maxHeight) {
        maxHeight = heightValues[i];
      }
      Serial.print("Height sensor triggered: ");
      Serial.print(i + 1);
      Serial.print(" | Height = ");
      Serial.println(heightValues[i]);
    }
    lastHeightState[i] = currentState;
  }

  // ---------------- VEHICLE TIMEOUT ----------------
  if (axleCount > 0 && (currentMillis - lastDetectionTime > VEHICLE_TIMEOUT)) {
    classifyVehicle(axleCount, maxHeight);
    axleCount = 0;
    maxHeight = 0;
  }
}

void classifyVehicle(unsigned long axles, int height) {
  String type;

  if (axles == 2 && height < 1600) type = "Car";
  else if (axles == 2 && height >= 1600 && height < 2200) type = "Van/Jeep";
  else if (axles == 2 && height >= 2200) type = "Bus";
  else if (axles == 3) type = "Mini-Truck";
  else if (axles >= 4 && height >= 2500) type = "Heavy Truck";
  else type = "Unknown";

  String payload = "|AA|" + String(axles) + "|" + type + "|" + String(height) + "|FF|";
  Serial.println(payload);
  transmitRS485(payload);
  //Serial.println("----- Vehicle Passed -----");
  //Serial.print("Total axles: "); Serial.println(axles);
  //Serial.print("Max height: "); Serial.println(height);
  //Serial.print("Vehicle type: "); Serial.println(type);
  //Serial.println();
}
*/

#include <SoftwareSerial.h>

#define RS485_RX A0
#define RS485_TX A1
#define RS485_DE_RE 13

#define AXLE_SENSOR_PIN 2
#define HEIGHT_SENSOR_COUNT 10
#define VEHICLE_TIMEOUT 3000
#define AXLE_DEBOUNCE_MS 200

SoftwareSerial rs485(RS485_RX, RS485_TX);

unsigned long axleCount = 0;
bool lastAxleState = HIGH;
unsigned long lastAxleChangeTime = 0;

const int heightSensorPins[HEIGHT_SENSOR_COUNT] = {3,4,5,6,7,8,9,10,11,12};
const int heightValues[HEIGHT_SENSOR_COUNT]     = {1400,1520,1650,1780,1910,2030,2400,2600,2800,3000};

bool lastHeightState[HEIGHT_SENSOR_COUNT];
bool triggered[HEIGHT_SENSOR_COUNT];

unsigned long lastDetectionTime = 0;

void setup() {
  Serial.begin(115200);
  Serial.println("System Ready!");

  pinMode(AXLE_SENSOR_PIN, INPUT);

  for (int i = 0; i < HEIGHT_SENSOR_COUNT; i++) {
    pinMode(heightSensorPins[i], INPUT);
    lastHeightState[i] = HIGH;
    triggered[i] = false;
  }
  pinMode(RS485_DE_RE, OUTPUT);
  digitalWrite(RS485_DE_RE, LOW);
  rs485.begin(9600);
}

void transmitRS485(String data) {
  digitalWrite(RS485_DE_RE, HIGH);
  delay(1);
  rs485.println(data);
  rs485.flush();
  delay(1);
  digitalWrite(RS485_DE_RE, LOW);
}

void loop() {
  unsigned long currentMillis = millis();

  // ---------------- AXLE SENSOR ----------------
  bool currentAxleState = digitalRead(AXLE_SENSOR_PIN);
  if (lastAxleState == HIGH && currentAxleState == LOW) {
    axleCount++;
    lastDetectionTime = millis();
    Serial.print("Axle detected. Count = ");
    Serial.println(axleCount);
    delay(30);
  }
  lastAxleState = currentAxleState;

  // ---------------- HEIGHT SENSORS ----------------
  for (int i = 0; i < HEIGHT_SENSOR_COUNT; i++) {
    bool currentState = digitalRead(heightSensorPins[i]);
    if (lastHeightState[i] == HIGH && currentState == LOW) {
      lastDetectionTime = currentMillis;
      triggered[i] = true;
      Serial.print("Height sensor triggered: ");
      Serial.print(i + 1);
      Serial.print(" | Height = ");
      Serial.println(heightValues[i]);
    }
    lastHeightState[i] = currentState;
  }

  // ---------------- VEHICLE TIMEOUT ----------------
  if (axleCount > 0 && (currentMillis - lastDetectionTime > VEHICLE_TIMEOUT)) {
    int maxHeight = 0;
    for (int i = 0; i < HEIGHT_SENSOR_COUNT; i++) {
      if (triggered[i] && heightValues[i] > maxHeight) {
        maxHeight = heightValues[i];
      }
      triggered[i] = false;
    }

    classifyVehicle(axleCount, maxHeight);

    axleCount = 0;
  }
}

void classifyVehicle(unsigned long axles, int height) {
  String type;

  if (axles == 2 && height < 1600) type = "Car";
  else if (axles == 2 && height >= 1600 && height < 2200) type = "Van/Jeep";
  else if (axles == 2 && height >= 2200) type = "Bus";
  else if (axles == 3) type = "Mini-Truck";
  else if (axles >= 4 && height >= 2500) type = "Heavy Truck";
  else type = "Unknown";

  String payload = "|AA|" + String(axles) + "|" + type + "|" + String(height) + "|FF|";
  Serial.println(payload);
  transmitRS485(payload);

  // Serial.println("----- Vehicle Passed -----");
  //Serial.print("Total axles: "); Serial.println(axles);
  //Serial.print("Max height: "); Serial.println(height);
  //Serial.print("Vehicle type: "); Serial.println(type);
  //Serial.println();
}
